{"version":3,"sources":["vendor/ember-cli/app-prefix.js","frontend/adapters/application.js","frontend/app.js","frontend/controllers/application.js","frontend/controllers/friends/base.js","frontend/controllers/friends/edit.js","frontend/controllers/friends/new.js","frontend/initializers/app-version.js","frontend/initializers/export-application-global.js","frontend/models/friend.js","frontend/router.js","frontend/routes/application.js","frontend/routes/friends.js","frontend/routes/friends/edit.js","frontend/routes/friends/index.js","frontend/routes/friends/new.js","frontend/routes/friends/show.js","frontend/templates/application.js","frontend/templates/friends.js","frontend/templates/friends/-form.js","frontend/templates/friends/edit.js","frontend/templates/friends/index.js","frontend/templates/friends/new.js","frontend/templates/friends/show.js","frontend/tests/adapters/application.jshint.js","frontend/tests/app.jshint.js","frontend/tests/controllers/application.jshint.js","frontend/tests/controllers/friends/base.jshint.js","frontend/tests/controllers/friends/edit.jshint.js","frontend/tests/controllers/friends/new.jshint.js","frontend/tests/helpers/resolver.js","frontend/tests/helpers/resolver.jshint.js","frontend/tests/helpers/start-app.js","frontend/tests/helpers/start-app.jshint.js","frontend/tests/models/friend.jshint.js","frontend/tests/router.jshint.js","frontend/tests/routes/application.jshint.js","frontend/tests/routes/friends.jshint.js","frontend/tests/routes/friends/edit.jshint.js","frontend/tests/routes/friends/index.jshint.js","frontend/tests/routes/friends/new.jshint.js","frontend/tests/routes/friends/show.jshint.js","frontend/tests/test-helper.js","frontend/tests/test-helper.jshint.js","frontend/tests/unit/adapters/application-test.js","frontend/tests/unit/adapters/application-test.jshint.js","frontend/tests/unit/controllers/application-test.js","frontend/tests/unit/controllers/application-test.jshint.js","frontend/tests/unit/controllers/friends/base-test.js","frontend/tests/unit/controllers/friends/base-test.jshint.js","frontend/tests/unit/controllers/friends/edit-test.js","frontend/tests/unit/controllers/friends/edit-test.jshint.js","frontend/tests/unit/controllers/friends/new-test.js","frontend/tests/unit/controllers/friends/new-test.jshint.js","frontend/tests/unit/models/friend-test.js","frontend/tests/unit/models/friend-test.jshint.js","frontend/tests/unit/routes/application-test.js","frontend/tests/unit/routes/application-test.jshint.js","frontend/tests/unit/routes/friends-test.js","frontend/tests/unit/routes/friends-test.jshint.js","frontend/tests/unit/routes/friends/edit-test.js","frontend/tests/unit/routes/friends/edit-test.jshint.js","frontend/tests/unit/routes/friends/index-test.js","frontend/tests/unit/routes/friends/index-test.jshint.js","frontend/tests/unit/routes/friends/new-test.js","frontend/tests/unit/routes/friends/new-test.jshint.js","frontend/tests/unit/routes/friends/show-test.js","frontend/tests/unit/routes/friends/show-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('frontend/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].ActiveModelAdapter.extend({\n    namespace: \"api\"\n  });\n\n});","define('frontend/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'frontend/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('frontend/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('frontend/controllers/friends/base', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    isValid: Ember['default'].computed(\"model.email\", \"model.firstName\", \"model.lastName\", \"twitter\", function () {\n      return !Ember['default'].isEmpty(this.get(\"model.email\")) && !Ember['default'].isEmpty(this.get(\"model.firstName\")) && !Ember['default'].isEmpty(this.get(\"model.lastName\")) && !Ember['default'].isEmpty(this.get(\"model.twitter\"));\n    }),\n    actions: {\n      save: function save() {\n        console.log(\"in save\");\n        if (this.get(\"isValid\")) {\n          var _this = this;\n          console.log(\"is valid\");\n          this.get(\"model\").save().then(function (friend) {\n            _this.transitionToRoute(\"friends.show\", friend);\n          });\n        } else {\n          console.log(\"is not valid\");\n          this.set(\"errorMessage\", \"You have to fill all the fields\");\n        }\n        return false;\n      },\n      cancel: function cancel() {\n        return true;\n      }\n    }\n\n  });\n\n});","define('frontend/controllers/friends/edit', ['exports', 'frontend/controllers/friends/base'], function (exports, FriendsBaseController) {\n\n  'use strict';\n\n  exports['default'] = FriendsBaseController['default'].extend({\n\n    actions: {\n      cancel: function cancel() {\n        this.transitionToRoute(\"friends.show\", this.get(\"model\"));\n        return false;\n      }\n    }\n\n  });\n\n});","define('frontend/controllers/friends/new', ['exports', 'frontend/controllers/friends/base'], function (exports, FriendsBaseController) {\n\n  'use strict';\n\n  exports['default'] = FriendsBaseController['default'].extend({\n\n    actions: {\n      cancel: function cancel() {\n        this.transitionToRoute(\"friends.index\");\n        return false;\n      }\n    }\n\n  });\n\n});","define('frontend/initializers/app-version', ['exports', 'frontend/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('frontend/initializers/export-application-global', ['exports', 'ember', 'frontend/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('frontend/models/friend', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    firstName: DS['default'].attr(\"string\"),\n    lastName: DS['default'].attr(\"string\"),\n    email: DS['default'].attr(\"string\"),\n    twitter: DS['default'].attr(\"string\"),\n    totalArticles: DS['default'].attr(\"number\"),\n\n    fullName: (function () {\n      return [this.get(\"firstName\"), this.get(\"lastName\")].join(\" \");\n    }).property(\"firstName\", \"lastName\")\n\n  });\n\n});","define('frontend/router', ['exports', 'ember', 'frontend/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  exports['default'] = Router.map(function () {\n    this.resource(\"friends\", function () {\n      this.route(\"new\");\n      this.route(\"show\", { path: \":friend_id\" });\n      this.route(\"edit\", { path: \":friend_id/edit\" });\n    });\n  });\n\n});","define('frontend/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    actions: {\n      save: function save() {\n        console.log(\"+---- save action bubbled up to application route\");\n        return true;\n      },\n      cancel: function cancel() {\n        console.log(\"+---- cancel action bubbled up to application route\");\n        return true;\n      }\n    }\n  });\n\n});","define('frontend/routes/friends', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    actions: {\n      save: function save() {\n        console.log(\"+--- save action bubbled up to friends route\");\n        return true;\n      },\n      cancel: function cancel() {\n        console.log(\"+--- cancel action bubbled up to friends route\");\n        return true;\n      },\n      \"delete\": function _delete(friend) {\n        var _this = this;\n        friend.destroyRecord().then(function () {\n          _this.transitionTo(\"friends.index\");\n        });\n      }\n    }\n\n  });\n\n});","define('frontend/routes/friends/edit', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('frontend/routes/friends/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.findAll(\"friend\");\n    },\n    actions: {} });\n\n  // delete: function(friend){\n  //   friend.destroyRecord();\n  //   return false;\n  // },\n\n});","define('frontend/routes/friends/new', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.createRecord(\"friend\");\n    },\n    actions: {\n      save: function save() {\n        console.log(\"+-- save action bubbled up to friends new route\");\n        return true;\n      },\n      cancel: function cancel() {\n        console.log(\"+-- cancel action bubbled up to friends new route\");\n        return true;\n      }\n    }\n  });\n\n});","define('frontend/routes/friends/show', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    actions: {}\n\n  });\n\n  // delete: function(friend) {\n  //   var _this = this;\n  //   friend.destroyRecord().then(function() {\n  //     _this.transitionTo('friends.index');\n  //   });\n  // }\n\n});","define('frontend/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"id\",\"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember.js\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/templates/friends', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Friends route\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/templates/friends/-form', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h2\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createTextNode(\"First Name: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createTextNode(\"Last Name: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createTextNode(\"Email: \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createTextNode(\"Twitter \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Friend details\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"input\");\n        dom.setAttribute(el2,\"type\",\"submit\");\n        dom.setAttribute(el2,\"value\",\"Save\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        var el3 = dom.createTextNode(\"Cancel\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [11]);\n        var element2 = dom.childAt(element0, [15]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [5, 1]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [7, 1]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element0, [9, 1]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(element1, [3]),0,0);\n        var morph6 = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n        element(env, element0, context, \"action\", [\"save\"], {\"on\": \"submit\"});\n        content(env, morph0, context, \"errorMessage\");\n        inline(env, morph1, context, \"input\", [], {\"value\": get(env, context, \"model.firstName\")});\n        inline(env, morph2, context, \"input\", [], {\"value\": get(env, context, \"model.lastName\")});\n        inline(env, morph3, context, \"input\", [], {\"value\": get(env, context, \"model.email\")});\n        inline(env, morph4, context, \"input\", [], {\"value\": get(env, context, \"model.twitter\")});\n        content(env, morph5, context, \"model.firstName\");\n        content(env, morph6, context, \"model.lastName\");\n        element(env, element2, context, \"action\", [\"cancel\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/templates/friends/edit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Editing \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n        content(env, morph0, context, \"model.fullName\");\n        inline(env, morph1, context, \"partial\", [\"friends/form\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/templates/friends/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createElement(\"a\");\n          dom.setAttribute(el3,\"href\",\"#\");\n          var el4 = dom.createTextNode(\"Delete\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [3, 0]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          inline(env, morph0, context, \"link-to\", [get(env, context, \"friend.fullName\"), \"friends.show\", get(env, context, \"friend\")], {});\n          element(env, element1, context, \"action\", [\"delete\", get(env, context, \"friend\")], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Friends Index\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createTextNode(\"Friends: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 3]),1,1);\n        content(env, morph0, context, \"model.length\");\n        block(env, morph1, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"friend\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/templates/friends/new', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Add a new friend\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        inline(env, morph0, context, \"partial\", [\"friends/form\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/templates/friends/show', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"First Name: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Last Name: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Email: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"twitter: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"#\");\n        var el4 = dom.createTextNode(\"Delete\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [11, 0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element0, [9]),0,0);\n        content(env, morph0, context, \"model.firstName\");\n        content(env, morph1, context, \"model.lastName\");\n        content(env, morph2, context, \"model.email\");\n        content(env, morph3, context, \"model.twitter\");\n        inline(env, morph4, context, \"link-to\", [\"Edit info\", \"friends.edit\", get(env, context, \"model\")], {});\n        element(env, element1, context, \"action\", [\"delete\", get(env, context, \"model\")], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('frontend/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/controllers/friends/base.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/friends');\n  test('controllers/friends/base.js should pass jshint', function() { \n    ok(true, 'controllers/friends/base.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/controllers/friends/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/friends');\n  test('controllers/friends/edit.js should pass jshint', function() { \n    ok(true, 'controllers/friends/edit.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/controllers/friends/new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/friends');\n  test('controllers/friends/new.js should pass jshint', function() { \n    ok(true, 'controllers/friends/new.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/helpers/resolver', ['exports', 'ember/resolver', 'frontend/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('frontend/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/helpers/start-app', ['exports', 'ember', 'frontend/app', 'frontend/router', 'frontend/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('frontend/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/models/friend.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/friend.js should pass jshint', function() { \n    ok(false, 'models/friend.js should pass jshint.\\nmodels/friend.js: line 11, col 67, Missing semicolon.\\n\\n1 error'); \n  });\n\n});","define('frontend/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/routes/friends.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/friends.js should pass jshint', function() { \n    ok(true, 'routes/friends.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/routes/friends/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/friends');\n  test('routes/friends/edit.js should pass jshint', function() { \n    ok(true, 'routes/friends/edit.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/routes/friends/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/friends');\n  test('routes/friends/index.js should pass jshint', function() { \n    ok(true, 'routes/friends/index.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/routes/friends/new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/friends');\n  test('routes/friends/new.js should pass jshint', function() { \n    ok(true, 'routes/friends/new.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/routes/friends/show.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/friends');\n  test('routes/friends/show.js should pass jshint', function() { \n    ok(true, 'routes/friends/show.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/test-helper', ['frontend/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('frontend/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:application\", \"ApplicationAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('frontend/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:application\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/application-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/application-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/controllers/friends/base-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:friends/base\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/controllers/friends/base-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/friends');\n  test('unit/controllers/friends/base-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/friends/base-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/controllers/friends/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:friends/edit\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/controllers/friends/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/friends');\n  test('unit/controllers/friends/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/friends/edit-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/controllers/friends/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:friends/new\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/controllers/friends/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/friends');\n  test('unit/controllers/friends/new-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/friends/new-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/models/friend-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"friend\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('frontend/tests/unit/models/friend-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/friend-test.js should pass jshint', function() { \n    ok(true, 'unit/models/friend-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:application\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/application-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/application-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/routes/friends-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:friends\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/routes/friends-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/friends-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/friends-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/routes/friends/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:friends/edit\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/routes/friends/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/friends');\n  test('unit/routes/friends/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/friends/edit-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/routes/friends/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:friends/index\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/routes/friends/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/friends');\n  test('unit/routes/friends/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/friends/index-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/routes/friends/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:friends/new\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/routes/friends/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/friends');\n  test('unit/routes/friends/new-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/friends/new-test.js should pass jshint.'); \n  });\n\n});","define('frontend/tests/unit/routes/friends/show-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:friends/show\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('frontend/tests/unit/routes/friends/show-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/friends');\n  test('unit/routes/friends/show-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/friends/show-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('frontend/config/environment', ['ember'], function(Ember) {\n  var prefix = 'frontend';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"frontend/tests/test-helper\");\n} else {\n  require(\"frontend/app\")[\"default\"].create({\"name\":\"frontend\",\"version\":\"0.0.0.2098a144\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrzhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"frontend.js"}